// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/asatraitis/mangrove/internal/dal (interfaces: UserTokensDAL)
//
// Generated by this command:
//
//	mockgen -destination=./mocks/mock_user_tokens.go -package=mocks github.com/asatraitis/mangrove/internal/dal UserTokensDAL
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/asatraitis/mangrove/internal/dal/models"
	uuid "github.com/google/uuid"
	pgx "github.com/jackc/pgx/v5"
	gomock "go.uber.org/mock/gomock"
)

// MockUserTokensDAL is a mock of UserTokensDAL interface.
type MockUserTokensDAL struct {
	ctrl     *gomock.Controller
	recorder *MockUserTokensDALMockRecorder
	isgomock struct{}
}

// MockUserTokensDALMockRecorder is the mock recorder for MockUserTokensDAL.
type MockUserTokensDALMockRecorder struct {
	mock *MockUserTokensDAL
}

// NewMockUserTokensDAL creates a new mock instance.
func NewMockUserTokensDAL(ctrl *gomock.Controller) *MockUserTokensDAL {
	mock := &MockUserTokensDAL{ctrl: ctrl}
	mock.recorder = &MockUserTokensDALMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserTokensDAL) EXPECT() *MockUserTokensDALMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockUserTokensDAL) Create(arg0 pgx.Tx, arg1 *models.UserToken) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockUserTokensDALMockRecorder) Create(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUserTokensDAL)(nil).Create), arg0, arg1)
}

// GetByID mocks base method.
func (m *MockUserTokensDAL) GetByID(arg0 uuid.UUID) (*models.UserToken, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", arg0)
	ret0, _ := ret[0].(*models.UserToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockUserTokensDALMockRecorder) GetByID(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockUserTokensDAL)(nil).GetByID), arg0)
}

// GetByIdWithUser mocks base method.
func (m *MockUserTokensDAL) GetByIdWithUser(arg0 uuid.UUID) (*models.UserToken, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByIdWithUser", arg0)
	ret0, _ := ret[0].(*models.UserToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByIdWithUser indicates an expected call of GetByIdWithUser.
func (mr *MockUserTokensDALMockRecorder) GetByIdWithUser(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByIdWithUser", reflect.TypeOf((*MockUserTokensDAL)(nil).GetByIdWithUser), arg0)
}
