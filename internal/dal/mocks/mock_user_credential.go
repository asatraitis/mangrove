// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/asatraitis/mangrove/internal/dal (interfaces: UserCredentialsDAL)
//
// Generated by this command:
//
//	mockgen -destination=./mocks/mock_user_credential.go -package=mocks github.com/asatraitis/mangrove/internal/dal UserCredentialsDAL
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/asatraitis/mangrove/internal/dal/models"
	pgx "github.com/jackc/pgx/v5"
	gomock "go.uber.org/mock/gomock"
)

// MockUserCredentialsDAL is a mock of UserCredentialsDAL interface.
type MockUserCredentialsDAL struct {
	ctrl     *gomock.Controller
	recorder *MockUserCredentialsDALMockRecorder
	isgomock struct{}
}

// MockUserCredentialsDALMockRecorder is the mock recorder for MockUserCredentialsDAL.
type MockUserCredentialsDALMockRecorder struct {
	mock *MockUserCredentialsDAL
}

// NewMockUserCredentialsDAL creates a new mock instance.
func NewMockUserCredentialsDAL(ctrl *gomock.Controller) *MockUserCredentialsDAL {
	mock := &MockUserCredentialsDAL{ctrl: ctrl}
	mock.recorder = &MockUserCredentialsDALMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserCredentialsDAL) EXPECT() *MockUserCredentialsDALMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockUserCredentialsDAL) Create(tx pgx.Tx, credential *models.UserCredential) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", tx, credential)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockUserCredentialsDALMockRecorder) Create(tx, credential any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUserCredentialsDAL)(nil).Create), tx, credential)
}
